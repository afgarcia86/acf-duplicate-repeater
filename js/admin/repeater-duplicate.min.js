!function(l){var a=acf_duplicate_repeater.options,r={_default:function(e,t,a){var n=e.find('[type="'+a+'"]');acf.getField(e),acf.getField(t);t.find('[type="'+a+'"]').each(function(e,t){l(this).val(l(n[e]).val())})},button_group:function(e,t){var a=t.find('[type="radio"]');e.find('[type="radio"]').each(function(e,t){if(l(t).prop("checked"))return l(a[e]).trigger("click"),!1})},checkbox:function(e,t){var a=t.find('[type="checkbox"]');e.find('[type="checkbox"]').each(function(e,t){l(a[e]).prop("checked",l(t).prop("checked"))})},color_picker:function(e,t){var a=acf.getField(e),n=acf.getField(t),i=a.$inputText().val();n.$inputText().iris("option","color",i)},date_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},date_time_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},file:function(e,t){var a=e.find(".acf-file-uploader"),n=t.find(".acf-file-uploader");r._default(e,t,"hidden"),a.hasClass("has-value")&&(n.find("div").first().html(a.find("div").first().html()),t.find(".acf-file-uploader").addClass("has-value"))},flexible_content:function(e,t){var a=acf.getField(e),n=acf.getField(t);a.$layouts().each(function(e,t){var a=l(t);n.add({layout:a.data("layout")}),d(a,n.$layouts().last(),"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")})},gallery:function(e,t){var a=e.find(".acf-gallery-attachments"),n=t.find(".acf-gallery-attachments"),i=t.find('input[type="hidden"]').attr("name")+"[]";a.children().each(function(e,t){$clone=l(t).clone(),$clone.find('[type="hidden"]').attr("name",i),n.append($clone)})},google_map:function(e,t){var a=acf.getField(e);acf.getField(t).setValue(a.getValue())},group:function(e,t){d(e,t,"> .acf-input > .acf-table > tbody > .acf-row > .acf-field, > .acf-input > .acf-fields > .acf-field")},image:function(e,t){r._default(e,t,"hidden"),t.find("img").attr("src",e.find("img").attr("src")),e.find(".acf-image-uploader").hasClass("has-value")&&t.find(".acf-image-uploader").addClass("has-value")},link:function(e,t){var a=e.find(".link-node"),n=t.find(".link-node");n.html(a.html()),n.attr("href",a.attr("href")),n.attr("target",a.attr("target")),n.trigger("change")},oembed:function(e,t){t.find('[data-name="search-input"]').val(e.find('[type="hidden"]').val()).trigger("blur")},post_object:function(e,t){r.select(e,t)},radio:function(e,t){r.button_group(e,t),r._default(e,t,"text")},range:function(e,t){r._default(e,t,"range"),r._default(e,t,"number")},relationship:function(e,t){var n=t.find(".values > .list"),a=t.find(".acf-relationship").children('input[type="hidden"]'),i=a.attr("name")+"[]";e.find(".values > .list").children().each(function(e,t){var a=l(t).clone();a.find('[type="hidden"]').attr("name",i),n.append(a)}),a.trigger("change")},repeater:function(e,t){var a=acf.getField(e),n=acf.getField(t),i=n.$rows();a.$rows().each(function(e,t){i[e]?$new_row=l(i[e]):$new_row=n.add(),d(l(t),$new_row,"> .acf-field, > .acf-fields > .acf-field")})},select:function(e,t,a){a=a||" > .acf-input > select";var n=e.find(a),i=t.find(a);1*n.data("ui")&&(i.html(""),n.find("option").each(function(e,t){i.append(l(t).clone())})),$destOpts=i.find("option"),n.find("option").each(function(e,t){l($destOpts[e]).prop("selected",l(t).prop("selected"))})},taxonomy:function(e,t){r.radio(e,t),r.checkbox(e,t),r.select(e,t,"> .acf-input > .acf-taxonomy-field > select")},textarea:function(e,t){t.find("textarea").val(e.find("textarea").val())},time_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},true_false:function(e,t){t.find('[type="checkbox"]').prop("checked",e.find('[type="checkbox"]').prop("checked")),t.find('[type="checkbox"]').trigger("change")},user:function(e,t){r.select(e,t)},wysiwyg:function(e,t){var a,n=acf.getField(e),i=acf.getField(t),d=i.$input().attr("id"),c=n.getValue();(a=tinymce.get(d))?(a.setContent(c),t.find("textarea").val(e.find("textarea").val()),a.save()):i.$input().html(c)}};function d(e,t,a){a=a||"> .acf-field, > .acf-fields > .acf-field";var f=e.find(a),o=t.find(a);f.each(function(e,t){return o[e]?l(f[e]).data("type")!==l(o[e]).data("type")?(console.trace("Error: source field type does not match destination field type"),!1):(a=l(f[e]),n=l(o[e]),i=a.attr("data-type"),(d=l.Event("acf_duplicate:"+i)).destination=n,a.trigger(d),void(d.isDefaultPrevented()||(r[i]?r[i](a,n):r._default(a,n,i),(c=l.Event("acf_duplicated:"+i)).destination=n,a.trigger(c)))):(console.trace("Error: source fields do not match destination fields"),!1);var a,n,i,d,c})}var e=function(a,e){var n=l.extend({},a);return l.each(e,function(e,t){if(void 0!==a[e]){if("events"===e)return void(a.events=l.extend(a.events,t));"function"==typeof t&&(n[e]=a[e])}a[e]=t}),a.parent=n,a};e(acf.models.FlexibleContentField.prototype,{events:{'click [data-name="duplicate-layout"]':"_duplicate"},render:function(){var e;return e=this.parent.render.apply(this,arguments),this.$layouts().each(function(e,t){l(this).find('[data-name="duplicate-layout"]').length||l(this).find(".acf-fc-layout-controls").prepend(a.duplicate_flexible_btn)}),e},_duplicate:function(e){var t,a,n;(a=l(e.target).closest(".layout")).closest(".acf-field"),this.add({layout:a.data("layout"),before:a}),(n=a.prev(".layout")).addClass("_duplicated"),d(a,n,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field"),setTimeout(function(){n.removeClass("_duplicated")},125),(t=l.Event("acf_duplicated_layout")).destination=n,a.trigger(t)}}),e(acf.models.RepeaterField.prototype,{events:{'click a[data-event="duplicate-row"]':"_duplicate"},render:function(){var e;return e=this.parent.render.apply(this,arguments),this.$rows().each(function(e){l(this).find("> td.remove").append(a.duplicate_repeater_btn)}),e},_duplicate:function(e){var t,a,n;l(e.target).hasClass("acf-icon")&&(t=l(e.target).closest(".acf-row"),(a=this.add({before:t})).addClass("_duplicated"),d(t,a),setTimeout(function(){a.removeClass("_duplicated")},125),(n=l.Event("acf_duplicated_row")).destination=a,t.trigger(n))}})}(jQuery);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
