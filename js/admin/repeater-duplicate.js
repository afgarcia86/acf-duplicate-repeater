!function d(f,l,c){function o(t,e){if(!l[t]){if(!f[t]){var a="function"==typeof require&&require;if(!e&&a)return a(t,!0);if(r)return r(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var i=l[t]={exports:{}};f[t][0].call(i.exports,function(e){return o(f[t][1][e]||e)},i,i.exports,d,f,l,c)}return l[t].exports}for(var r="function"==typeof require&&require,e=0;e<c.length;e++)o(c[e]);return o}({1:[function(e,t,a){(function(e){"use strict";var t,d=(t="undefined"!=typeof window?window.jQuery:void 0!==e?e.jQuery:null)&&t.__esModule?t:{default:t};var a=acf_duplicate_repeater.options,f={_default:function(e,t,a){var n=e.find('[type="'+a+'"]');acf.getField(e),acf.getField(t);t.find('[type="'+a+'"]').each(function(e,t){(0,d.default)(this).val((0,d.default)(n[e]).val())})},button_group:function(e,t){var a=t.find('[type="radio"]');e.find('[type="radio"]').each(function(e,t){if((0,d.default)(t).prop("checked"))return(0,d.default)(a[e]).trigger("click"),!1})},checkbox:function(e,t){var a=t.find('[type="checkbox"]');e.find('[type="checkbox"]').each(function(e,t){(0,d.default)(a[e]).prop("checked",(0,d.default)(t).prop("checked"))})},color_picker:function(e,t){var a=acf.getField(e),n=acf.getField(t),i=a.$inputText().val();n.$inputText().iris("option","color",i)},date_picker:function(e,t){f._default(e,t,"text"),f._default(e,t,"hidden")},date_time_picker:function(e,t){f._default(e,t,"text"),f._default(e,t,"hidden")},file:function(e,t){var a=e.find(".acf-file-uploader"),n=t.find(".acf-file-uploader");f._default(e,t,"hidden"),a.hasClass("has-value")&&(n.find("div").first().html(a.find("div").first().html()),t.find(".acf-file-uploader").addClass("has-value"))},flexible_content:function(e,t){var a=acf.getField(e),n=acf.getField(t);a.$layouts().each(function(e,t){var a=(0,d.default)(t);n.add({layout:a.data("layout")}),l(a,n.$layouts().last(),"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")})},gallery:function(e,t){var a=e.find(".acf-gallery-attachments"),n=t.find(".acf-gallery-attachments"),i=t.find('input[type="hidden"]').attr("name")+"[]";a.children().each(function(e,t){$clone=(0,d.default)(t).clone(),$clone.find('[type="hidden"]').attr("name",i),n.append($clone)})},google_map:function(e,t){var a=acf.getField(e);acf.getField(t).setValue(a.getValue())},group:function(e,t){l(e,t,"> .acf-input > .acf-table > tbody > .acf-row > .acf-field, > .acf-input > .acf-fields > .acf-field")},image:function(e,t){f._default(e,t,"hidden"),t.find("img").attr("src",e.find("img").attr("src")),e.find(".acf-image-uploader").hasClass("has-value")&&t.find(".acf-image-uploader").addClass("has-value")},link:function(e,t){var a=e.find(".link-node"),n=t.find(".link-node");n.html(a.html()),n.attr("href",a.attr("href")),n.attr("target",a.attr("target")),n.trigger("change")},oembed:function(e,t){t.find('[data-name="search-input"]').val(e.find('[type="hidden"]').val()).trigger("blur")},post_object:function(e,t){f.select(e,t)},radio:function(e,t){f.button_group(e,t),f._default(e,t,"text")},range:function(e,t){f._default(e,t,"range"),f._default(e,t,"number")},relationship:function(e,t){var n=t.find(".values > .list"),a=t.find(".acf-relationship").children('input[type="hidden"]'),i=a.attr("name")+"[]";e.find(".values > .list").children().each(function(e,t){var a=(0,d.default)(t).clone();a.find('[type="hidden"]').attr("name",i),n.append(a)}),a.trigger("change")},repeater:function(e,t){var a=acf.getField(e),n=acf.getField(t),i=n.$rows();a.$rows().each(function(e,t){i[e]?$new_row=(0,d.default)(i[e]):$new_row=n.add(),l((0,d.default)(t),$new_row,"> .acf-field, > .acf-fields > .acf-field")})},select:function(e,t,a){a=a||" > .acf-input > select";var n=e.find(a),i=t.find(a);1*n.data("ui")&&(i.html(""),n.find("option").each(function(e,t){i.append((0,d.default)(t).clone())})),$destOpts=i.find("option"),n.find("option").each(function(e,t){(0,d.default)($destOpts[e]).prop("selected",(0,d.default)(t).prop("selected"))})},taxonomy:function(e,t){f.radio(e,t),f.checkbox(e,t),f.select(e,t,"> .acf-input > .acf-taxonomy-field > select")},textarea:function(e,t){t.find("textarea").val(e.find("textarea").val())},time_picker:function(e,t){f._default(e,t,"text"),f._default(e,t,"hidden")},true_false:function(e,t){t.find('[type="checkbox"]').prop("checked",e.find('[type="checkbox"]').prop("checked")),t.find('[type="checkbox"]').trigger("change")},user:function(e,t){f.select(e,t)},wysiwyg:function(e,t){var a,n=acf.getField(e),i=acf.getField(t),d=i.$input().attr("id"),f=n.getValue();(a=tinymce.get(d))?(a.setContent(f),t.find("textarea").val(e.find("textarea").val()),a.save()):i.$input().html(f)}};function l(e,t,a){a=a||"> .acf-field, > .acf-fields > .acf-field";var n=e.find(a),i=t.find(a);n.each(function(e,t){return i[e]?(0,d.default)(n[e]).data("type")!==(0,d.default)(i[e]).data("type")?(console.trace("Error: source field type does not match destination field type"),!1):void function(e,t){var a,n,i;a=e.attr("data-type"),(n=d.default.Event("acf_duplicate:"+a)).destination=t,e.trigger(n),n.isDefaultPrevented()||(f[a]?f[a](e,t):f._default(e,t,a),(i=d.default.Event("acf_duplicated:"+a)).destination=t,e.trigger(i))}((0,d.default)(n[e]),(0,d.default)(i[e])):(console.trace("Error: source fields do not match destination fields"),!1)})}function n(a,e){var n=d.default.extend({},a);return d.default.each(e,function(e,t){if(void 0!==a[e]){if("events"===e)return void(a.events=d.default.extend(a.events,t));"function"==typeof t&&(n[e]=a[e])}a[e]=t}),a.parent=n,a}var i={events:{'click [data-name="duplicate-layout"]':"_duplicate"},render:function(){var e;return console.log("render",this),e=this.parent.render.apply(this,arguments),this.$layouts().each(function(e,t){(0,d.default)(this).find('[data-name="duplicate-layout"]').length||(0,d.default)(this).find(".acf-fc-layout-controls").prepend(a.duplicate_flexible_btn)}),e},_duplicate:function(e){var t,a,n;(a=(0,d.default)(e.target).closest(".layout")).closest(".acf-field"),this.add({layout:a.data("layout"),before:a}),(n=a.prev(".layout")).addClass("_duplicated"),l(a,n,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field"),setTimeout(function(){n.removeClass("_duplicated")},125),(t=d.default.Event("acf_duplicated_layout")).destination=n,a.trigger(t)}};n(acf.models.FlexibleContentField.prototype,i),n(acf.models.RepeaterField.prototype,{events:{'click a[data-event="duplicate-row"]':"_duplicate"},render:function(){var e;return e=this.parent.render.apply(this,arguments),this.$rows().each(function(e){(0,d.default)(this).find("> td.remove").append(a.duplicate_repeater_btn)}),e},_duplicate:function(e){var t,a,n;(0,d.default)(e.target).hasClass("acf-icon")&&(t=(0,d.default)(e.target).closest(".acf-row"),(a=this.add({before:t})).addClass("_duplicated"),l(t,a),setTimeout(function(){a.removeClass("_duplicated")},125),(n=d.default.Event("acf_duplicated_row")).destination=a,t.trigger(n))}})}).call(this,"undefined"!=typeof global?global:"undefined"!=typeof self?self:"undefined"!=typeof window?window:{})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
