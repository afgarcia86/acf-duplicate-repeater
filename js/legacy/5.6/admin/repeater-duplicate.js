!function f(c,d,r){function l(t,e){if(!d[t]){if(!c[t]){var n="function"==typeof require&&require;if(!e&&n)return n(t,!0);if(o)return o(t,!0);var a=new Error("Cannot find module '"+t+"'");throw a.code="MODULE_NOT_FOUND",a}var i=d[t]={exports:{}};c[t][0].call(i.exports,function(e){return l(c[t][1][e]||e)},i,i.exports,f,c,d,r)}return d[t].exports}for(var o="function"==typeof require&&require,e=0;e<r.length;e++)l(r[e]);return l}({1:[function(e,t,n){"use strict";function c(e,t,n){n=n||"> .acf-field, > .acf-fields > .acf-field";var a=e.find(n),i=t.find(n);a.each(function(e,t){return i[e]?d(a[e]).data("type")!==d(i[e]).data("type")?(console.trace("Error: source field type does not match destination field type"),!1):void function(e,t){var n,a,i;n=e.attr("data-type"),(a=d.Event("acf_duplicate:"+n)).destination=t,e.trigger(a),a.isDefaultPrevented()||(r[n]?r[n](e,t):r._default(e,t,n),(i=d.Event("acf_duplicated:"+n)).destination=t,e.trigger(i))}(d(a[e]),d(i[e])):(console.trace("Error: source fields do not match destination fields"),!1)})}var d,a,i,f,r;d=jQuery,a=acf_duplicate_repeater.options,i=d.extend({},acf.fields.repeater),f=d.extend({},acf.fields.flexible_content),r={_default:function(e,t,n){var a=e.find('[type="'+n+'"]');t.find('[type="'+n+'"]').each(function(e,t){d(this).val(d(a[e]).val())})},button_group:function(e,t){var n=t.find('[type="radio"]');e.find('[type="radio"]').each(function(e,t){if(d(t).prop("checked"))return d(n[e]).trigger("click"),!1})},checkbox:function(e,t){var n=t.find('[type="checkbox"]');e.find('[type="checkbox"]').each(function(e,t){d(n[e]).prop("checked",d(t).prop("checked"))})},color_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},date_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},date_time_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},file:function(e,t){var n=e.find(".acf-file-uploader"),a=t.find(".acf-file-uploader");r._default(e,t,"hidden"),n.hasClass("has-value")&&(a.find("div").first().html(n.find("div").first().html()),t.find(".acf-file-uploader").addClass("has-value"))},flexible_content:function(e,i){var f="> .acf-input > .acf-flexible-content > .values > .layout";acf.fields.flexible_content.set("$field",i),e.find(f).each(function(e,t){var n,a=d(t);acf.fields.flexible_content.add(a.data("layout")),n=i.find(f).last(),c(d(t),n,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field")})},gallery:function(e,t){var n=e.find(".acf-gallery-attachments"),a=t.find(".acf-gallery-attachments"),i=t.find('input[type="hidden"]').attr("name")+"[]";n.children().each(function(e,t){$clone=d(t).clone(),$clone.find('[type="hidden"]').attr("name",i),a.append($clone)})},google_map:function(e,t){r._default(e,t,"hidden")},group:function(e,t){c(e,t,"> .acf-input > .acf-table > tbody > .acf-row > .acf-field, > .acf-input > .acf-fields > .acf-field")},image:function(e,t){r._default(e,t,"hidden"),t.find("img").attr("src",e.find("img").attr("src")),e.find(".acf-image-uploader").hasClass("has-value")&&t.find(".acf-image-uploader").addClass("has-value")},link:function(e,t){var n=e.find(".link-node"),a=t.find(".link-node");a.html(n.html()),a.attr("href",n.attr("href")),a.attr("target",n.attr("target")),a.trigger("change")},oembed:function(e,t){t.find('[data-name="search-input"]').val(e.find('[type="hidden"]').val()).trigger("blur")},post_object:function(e,t){r.select(e,t)},radio:function(e,t){r.button_group(e,t),r._default(e,t,"text")},range:function(e,t){r._default(e,t,"range"),r._default(e,t,"number")},relationship:function(e,t){var a=t.find(".values > .list"),n=t.find(".acf-relationship").children('input[type="hidden"]'),i=n.attr("name")+"[]";e.find(".values > .list").children().each(function(e,t){var n=d(t).clone();n.find('[type="hidden"]').attr("name",i),a.append(n)}),n.trigger("change")},repeater:function(e,t){acf.fields.repeater.set("$field",t),e.find("> .acf-input > .acf-repeater > .acf-table > tbody > .acf-row:not(.acf-clone)").each(function(e,t){var n=acf.fields.repeater.add();c(d(t),n,"> .acf-field, > .acf-fields > .acf-field")})},select:function(e,t,n){n=n||" > .acf-input > select";var a=e.find(n),i=t.find(n);1*a.data("ui")&&(i.html(""),a.find("option").each(function(e,t){i.append(d(t).clone())})),$destOpts=i.find("option"),a.find("option").each(function(e,t){d($destOpts[e]).prop("selected",d(t).prop("selected"))})},taxonomy:function(e,t){r.radio(e,t),r.checkbox(e,t),r.select(e,t,"> .acf-input > .acf-taxonomy-field > select")},textarea:function(e,t){t.find("textarea").val(e.find("textarea").val())},time_picker:function(e,t){r._default(e,t,"text"),r._default(e,t,"hidden")},true_false:function(e,t){t.find('[type="checkbox"]').prop("checked",e.find('[type="checkbox"]').prop("checked")),t.find('[type="checkbox"]').trigger("change")},user:function(e,t){r.select(e,t)},wysiwyg:function(f,c){acf.add_action("wysiwyg_tinymce_init",function(e,t,n,a){if(a.get(0)===c.get(0)){var i=tinymce.get(f.find("textarea").attr("id"));i&&e.setContent(i.getContent())}}),c.find("textarea").html(f.find("textarea").html())}},acf.fields.flexible_content=acf.fields.flexible_content.extend({events:{'click [data-name="duplicate-layout"]':"_duplicate"},render:function(){var e;return e=f.render.apply(this,arguments),this.$values.children(".layout").each(function(e,t){d(this).find('[data-name="duplicate-layout"]').length||d(this).find(".acf-fc-layout-controlls").prepend(a.duplicate_flexible_btn)}),e},_duplicate:function(e){var t,n,a,i;n=(a=e.$el.closest(".layout")).closest(".acf-field"),acf.fields.flexible_content.set("$field",n),acf.fields.flexible_content.add(a.data("layout"),a),i=a.prev(".layout"),c(a,i,"> .acf-table > tbody > .acf-row > .acf-field, > .acf-fields > .acf-field"),(t=d.Event("acf_duplicated_layout")).destination=i,a.trigger(t)}}),acf.fields.repeater=acf.fields.repeater.extend({events:{'click a[data-event="duplicate-row"]':"_duplicate"},render:function(){var e;return e=i.render.apply(this,arguments),this.$tbody.children().each(function(e){d(this).find("> td.remove").append(a.duplicate_repeater_btn)}),e},_duplicate:function(e){var t,n,a;e.$el.hasClass("acf-icon")&&(c(t=e.$el.closest(".acf-row"),n=this.add(t)),this.$input.trigger("change"),(a=d.Event("acf_duplicated_row")).destination=n,t.trigger(a))}})},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
